[color]
	diff = auto
	interactive = auto
	status = auto
	branch = auto
	grep = auto
[user]
	email = adambro@o2.pl
	name = Adam Brodziak
[alias]
	st = status
	ci = commit
	co = checkout
	br = branch

	# http://rudygems.com/post/1085402153/git-pp-git-push-git-pull
	pp = !sh -c 'git pull --rebase && git push'

	# unadd - removes files/directories from staging
	# http://www.robo47.net/blog/208-Git-Aliases-Submodules-and-Symfony
	unadd = reset HEAD --

	# list all aliases
	aliases = config --get-regexp alias

	# top committers
	committers = shortlog --numbered --summary
	master = checkout master
	dev = checkout develop
	amend = commit --amend
	fixup = commit --amend --no-edit

	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit

	dsf = "!git diff --color $@ | diff-so-fancy"

	# http://haacked.com/archive/2014/07/28/github-flow-aliases/
	cob = checkout -b
	up = !git pull --prune $@ && git submodule update --init --recursive
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"

	undo = "!f() { \\\n    git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; \\\n}; f"

	# https://blog.scottnonnenberg.com/better-git-configuration/
	prune = fetch --prune

	# finding hot code - one that chages the most often since given date (from refactoring course)
	code-hot = "!f() { git log --since="${1-1970-01-01}" --format=format: --name-only | egrep -v '^$|\\.json$|\\.md$' | sort | uniq -c | sort -rn; }; f"
	# find the age of a file, taking the most recent commit, to distill stable code
	code-age = "!for F in `git ls-files`; do git --no-pager log -1 --format="%ad" --date=short -- $F | tr '\n' ' ' && echo $F; done"

	# SSS changelog
	changelog = "!f() { git log --since="${1-1970-01-01}" --format='%b' | egrep 'Added|Changed|Fixed' | tr -d '\\'; }; f"
[core]
	editor = vim -c start
	autocrlf = input
[push]
	default = current
[pull]
	rebase = false
[status]
	showUntrackedFiles = all
	# Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
	# https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles
